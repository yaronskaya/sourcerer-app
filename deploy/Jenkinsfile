podTemplate(label: 'build-pod-sourcerer-app',
    containers: [
        containerTemplate(name: 'jnlp', image: 'gcr.io/sourcerer-1377/jenkins-slave:v4', args: '${computer.jnlpmac} ${computer.name}'),
        containerTemplate(name: 'gradle', image: 'gcr.io/sourcerer-1377/gradle:4.2.0', ttyEnabled: true, command: 'tail -f /dev/null')
    ],
    envVars: [
      envVar(key: 'CONTAINER_TAG', value: "${env.BRANCH_NAME}.${env.BUILD_NUMBER}")
    ],
    volumes: [
        hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
        hostPathVolume(hostPath: '/usr/bin/docker', mountPath: '/usr/bin/docker')
    ]
) {
  node('build-pod-sourcerer-app') {
    def namespace = "sandbox"
    def benv = 'development'

    if (env.BRANCH_NAME == 'master') {
      namespace = 'production'
      benv = 'production'
    } else if (env.BRANCH_NAME == 'develop') {
      namespace = 'staging'
    }

    stage('checkout') {
      checkout scm
    }

    stage('build jar and test') {
      container('gradle') {
        sh("ENV=${benv} NAMESPACE=${namespace} ./do.sh build_jar_inside")
      }
    }

    stage('build nginx') {
      container('gradle') {
        sh("./do.sh build_prod_inside")
      }
    }

    stage('push') {
      sh("./do.sh push")
    }
    
    stage('deploy') {
      println "Deploying to ${namespace} kubernetes namespace"
      sh("NAMESPACE=${namespace} ./do.sh deploy")
    }
  }
}

